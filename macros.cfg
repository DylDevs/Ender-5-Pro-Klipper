# G-code macro to run on print start
# Heats up bed and extruder, levels bed, preps for purge line
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %} # Define heated bed temperature
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(208)|float %} # Define extruder temperature
    M104 S{EXTRUDER_TEMP} # Set extruder temp to EXTRUDER_TEMP and continue to bed heating
    M140 S{BED_TEMP} # Set bed temp and continue
    G28 # Home the printer
    #BED_MESH_PROFILE LOAD=default # Load saved bed mesh
    M109 s{EXTRUDER_TEMP} # Wait for extruder to reach EXTRUDER_TEMP
    M190 S{BED_TEMP} # Wait for bed to reach BED_TEMP
    BED_MESH_CALIBRATE # Calibrate a bed mesh
    BED_MESH_PROFILE SAVE=default # Save in memory to view in Mainsail
    LINE_PURGE # KAMP Adaptive Line Purge
    G92 E0 # Reset extruder

# G-Code macro to run on print end
# Safely retracts filament, lowers bed, and disables heaters/steppers
[gcode_macro END_PRINT]
gcode:
    G91 # Use relative positioning
    G1 E-2 F2700 # Retract 2mm of filament at 45mm/s
    G1 E-2 Z0.2 F2400 # Retract 2mm of filament and raise the bed 0.2mm at 40mm/s
    G1 X5 Y5 F3000 # Move extruder diagonaly by 5mm at 50mm/s
    G90 # Use absolute positioning
    G28 X0 Y0 # Move X and Y back home for a clear bed view
    G1 Z60 # Move bed to a Z of 60 for easier access to the build plate
    M106 S0 # Turn off fan
    M104 S0 # Turn off hotend heater
    M140 S0 # Turn off bed heater
    M84 X Y E # Disable toolhead movement

[pause_resume]

# G-Code macro for changing filaments
# Pauses the print, moves extruder/bed, and retracts 50mm of filament
[gcode_macro M600]
gcode:
    G91 # Use relative positioning
    G1 E-5 F2500 # Retracts filament by 5mm at 40mm/s
    G1 Z30 # Move bed down from current position by 30mm
    G90 # Use absolute positioning
    G1 X0 Y0 F3000 # Move the extruder to its filament changing position
    
# Enable object exclusion
# If a multi object print fails, the object can be excluded to let the others continue
[exclude_object]

# G-Code macro for managing multi-object prints
# Enables canceling, defining, switching, and restoring objects during a print
[gcode_macro M486]
gcode:
    {% if 'exclude_object' not in printer %}
        {action_raise_error("[exclude_object] is not enabled")} # Raise error if exclude_object module isn't loaded
    {% endif %}
    {% if 'T' in params %}
        EXCLUDE_OBJECT RESET=1 # Reset the object exclusion state
        {% for i in range(params.T | int) %}
            EXCLUDE_OBJECT_DEFINE NAME={i} # Define object names as 0, 1, 2... up to the specified count
        {% endfor %}
    {% endif %}
    {% if 'C' in params %}
        EXCLUDE_OBJECT CURRENT=1 # Cancel the currently active object
    {% endif %}
    {% if 'P' in params %}
        EXCLUDE_OBJECT NAME={params.P} # Cancel a specific object by index or name
    {% endif %}
    {% if 'S' in params %}
        {% if params.S == '-1' %}
            {% if printer.exclude_object.current_object %}
                EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object} # End the current object (used for purge lines or non-object moves)
            {% endif %}
        {% else %}
            EXCLUDE_OBJECT_START NAME={params.S} # Start a new object by name or index
        {% endif %}
    {% endif %}
    {% if 'U' in params %}
        EXCLUDE_OBJECT RESET=1 NAME={params.U} # Un-cancel an object so it can continue printing (if not already skipped)
    {% endif %}