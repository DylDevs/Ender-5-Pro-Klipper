# G-code macro to run on print start
# Heats up bed and extruder, levels bed, preps for purge line
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %} # Define heated bed temperature
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %} # Define extruder temperature
    M140 S{BED_TEMP} # Heat bed to BED_TEMP
    M190 S{BED_TEMP} # Wait for bed to reach BED_TEMP
    M109 S{EXTRUDER_TEMP} # Set extruder temp to EXTRUDER_TEMP and wait
    G28 # Home the printer
    BED_MESH_CALIBRATE # Level bed with CR Touch module
    G90 # Use absolute positioning
    SET_GCODE_OFFSET Z=0.0 # Reset the bed offset (adjust if needed)
    G1 Z5 F3000 # Move the bed to 5mm absolute at 50mm/s
    G1 Z0.15 F300 # Move the bed to 0.15mm absolute at 5mm/s

# G-Code macro to run on print end
# Safely retracts filament, lowers bed, and disables parts
[gcode_macro END_PRINT]
gcode:
    G91 # Use relative positioning
    G1 E-2 F2700 # Retract 2mm of filament at 45mm/s
    G1 E-2 Z0.2 F2400 # Retract 2mm of filament and raise the bed 0.2mm at 40mm/s
    G1 X5 Y5 F3000 # Move extruder diagonaly by 5mm at 50mm/s
    G1 Z10 # Lower bed by 10mm at 50mm/s (last used)
    G90 # Use absolute positioning
    G28 X0 Y0 # Move X and Y back home for a clear bed view
    M106 S0 # Turn off fan
    M104 S0 # Turn off hotend heater
    M140 S0 # Turn off bed heater
    M84 X Y E # Disable extruder movement

[pause_resume] # Allow pausing and resuming of prints

# G-Code macro for changing filaments
# Pauses the print, moves extruder/bed, and retracts 50mm of filament
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %} # Define extruder X position for filament change
    {% set Y = params.Y|default(0)|float %} # Define extruder Y position for filament change
    {% set Z = params.Z|default(10)|float %} # Define bed position for filament change
    SAVE_GCODE_STATE NAME=M600_state # Save G-Code state before pausing
    PAUSE # Pause the print
    G91 # Use relative positioning
    G1 E-.8 F2700 # Retracts filament by 0.8mm at 45mm/s
    G1 Z{Z} # Move bed down from current position by set value
    G90 # Use absolute positioning
    G1 X{X} Y{Y} F3000 # Move the extruder to its filament changing position
    G91 # Use relative positioning
    G1 E-50 F1000 # Retract 50mm of filament at ~17mm/s
    RESTORE_GCODE_STATE NAME=M600_state # Restore saved G-Code state

# G-Code macro to play a beep tone
# Play a ton at the set frequency for the set duration
[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} # Define the frequency of the tone
    {% set P = params.P|default(100)|int %} # Define the duration of the tone
    {% set L = 0.5 %} # L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} # If the frequency is zero or negative
        {% set F = 1 %}  # Set a period of 1 second
        {% set L = 0 %}  # Zero duty cycle = silence
    {% elif S >= 10000 %} # If frequency is 10khz or above
        {% set F = 0 %}  # Disable PWM
    {% else %} # Valid frequency and duration
        {% set F = 1/S %}  # Calculate the PWM cycle time as the inverse of frequency
    {% endif %}
    SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} # Play the tone
    G4 P{P} # Wait for the duration of the beep
    SET_PIN PIN=BEEPER_Pin VALUE=0 # Stop the tone


# Enable object exclusion
# If a multi object print fails, the object can be excluded to let the others continue
[exclude_object]

# G-Code macro for managing multi-object prints
# Enables canceling, defining, switching, and restoring objects during a print
[gcode_macro M486]
gcode:
    {% if 'exclude_object' not in printer %}
        {action_raise_error("[exclude_object] is not enabled")} # Raise error if exclude_object module isn't loaded
    {% endif %}

    {% if 'T' in params %}
        EXCLUDE_OBJECT RESET=1 # Reset the object exclusion state

        {% for i in range(params.T | int) %}
            EXCLUDE_OBJECT_DEFINE NAME={i} # Define object names as 0, 1, 2... up to the specified count
        {% endfor %}
    {% endif %}

    {% if 'C' in params %}
        EXCLUDE_OBJECT CURRENT=1 # Cancel the currently active object
    {% endif %}

    {% if 'P' in params %}
        EXCLUDE_OBJECT NAME={params.P} # Cancel a specific object by index or name
    {% endif %}

    {% if 'S' in params %}
        {% if params.S == '-1' %}
            {% if printer.exclude_object.current_object %}
                EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object} # End the current object (used for purge lines or non-object moves)
            {% endif %}
        {% else %}
            EXCLUDE_OBJECT_START NAME={params.S} # Start a new object by name or index
        {% endif %}
    {% endif %}

    {% if 'U' in params %}
        EXCLUDE_OBJECT RESET=1 NAME={params.U} # Un-cancel an object so it can continue printing (if not already skipped)
    {% endif %}